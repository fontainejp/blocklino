//message
Blockly.Msg.microbit_err = 'Connect board or install pilote !';
Blockly.Msg.httpRequestError= "There was a problem with the request.";
Blockly.Msg.hashError= "Sorry, '%1' does not match any saved programs.";
Blockly.Msg.xmlError= "Unable to load file Can it be created with another version of Blocklino?";
Blockly.Msg.error = "ERROR : Blocks not connected";
Blockly.Msg.err = "ERROR\n";
Blockly.Msg.verif = "Check the program first !"
Blockly.Msg.save = "Save as format";
Blockly.Msg.update = "Update";
Blockly.Msg.new_update = "A new version is available, do you want to download and install it now ?" ;
Blockly.Msg.yes = "yes";
Blockly.Msg.no = "no";
Blockly.Msg.uptodate = "Your version is up to date." ;
Blockly.Msg.download = "Download completed, the application will install and restart ...";
Blockly.Msg.xmlLoad= "'OK' to load the new program\n\n'Cancel' to merge the two programs.";
Blockly.Msg.timeout= "Maximum number of execution iterations exceeded.";
Blockly.Msg.badCode= "Program error : \n %1";
Blockly.Msg.discard= "Delete all blocks to start a new program ?";
Blockly.Msg.quit= "You want to quit the program ?";
Blockly.Msg.badXml= "XML parsing error : \n %1 \n\nSelect 'OK' to abort your changes or 'Cancel' to continue editing the XML.";
Blockly.Msg.arduino_card= "Load settings for the card";
Blockly.Msg.details = "details";
Blockly.Msg.flash = "upload";
Blockly.Msg.com2 = "Select a port !" ;
Blockly.Msg.check = "Check ";
Blockly.Msg.upload = "Upload ";
// toolbox
Blockly.Msg.CAT_OLED="- OLED";
Blockly.Msg.CAT_COLOR="- Colour";
Blockly.Msg.CAT_aff="Display";
Blockly.Msg.CAT_BUZZER="- Buzzer";
Blockly.Msg.CAT_MIDI="- Midi";
Blockly.Msg.CAT_AUDIO="Audio";
Blockly.Msg.CAT_STOCKAGE = "Storage";
Blockly.Msg.CAT_numerique = "- Binary";
Blockly.Msg.CAT_analogique = "- Other";
Blockly.Msg.CAT_wifi = "- Wifi";
Blockly.Msg.CAT_TAB = "Table";
Blockly.Msg.CAT_list = "List";
Blockly.Msg.CAT_servo = "- Servo";
Blockly.Msg.CAT_del = "- LED";
Blockly.Msg.CAT_bargraphe="- Bargraph";
Blockly.Msg.CAT_LOGIC = "Control";
Blockly.Msg.CAT_MATH = "Math";
Blockly.Msg.CAT_TEXT = "Text";
Blockly.Msg.CAT_VARIABLES = "Variable";
Blockly.Msg.CAT_FUNCTIONS = "Function";
Blockly.Msg.CAT_ARDUINO = "Structure";
Blockly.Msg.CAT_ARDUINO_IN = "In / Out";
Blockly.Msg.CAT_ARDUINO_OUT = "Exit";
Blockly.Msg.CAT_ARDUINO_TIME = "Time";
Blockly.Msg.CAT_actionneur = "Actuator";
Blockly.Msg.CAT_com = "Communication";
Blockly.Msg.CAT_ARDUINO_COMM_SERIAL = "- Serial";
Blockly.Msg.CAT_ARDUINO_COMM_SOFTSERIAL = "- Software";
Blockly.Msg.CAT_ARDUINO_moteur="- Motor";
Blockly.Msg.CAT_ultrason = "Sensor";
Blockly.Msg.CAT_bluetooth = "- Bluetooth";
Blockly.Msg.CAT_ARDUINO_matrice8x8 = "- Matrix";
Blockly.Msg.CAT_DFRobot_SHIELD_LCDKEYPAD = "- LCD";
Blockly.Msg.CAT_iot = "IoT";
Blockly.Msg.CAT_html = "- HTML";
Blockly.Msg.CAT_DFPLAYER="- DFPlayer mini";
Blockly.Msg.CAT_GROVE_MP3="- Grove MP3 v3";
Blockly.Msg.CAT_MYBLOCKS="My blocks";
Blockly.Msg.CAT_FACTORY="- factory";
Blockly.Msg.CAT_ONLINE="- online";
Blockly.Msg.CAT_LOCAL="- local";
// button
Blockly.Msg.usbLabel= " Availables USB Ports ";
Blockly.Msg.btn_turtle=" TURTLE ";
Blockly.Msg.btn_tools=" Tools ";
Blockly.Msg.btn_config= " Preferences ";
Blockly.Msg.btn_about= " About ";
Blockly.Msg.btn_new= " New ";
Blockly.Msg.btn_fakeload= " Open ";
Blockly.Msg.btn_example= " Examples ";
Blockly.Msg.btn_term= " SERIAL Monitor ";
Blockly.Msg.btn_factory= " BLOCKLY-FACTORY ";
Blockly.Msg.btn_saveXML= " Save ";
Blockly.Msg.btn_print= " Screenshot ";
Blockly.Msg.btn_preview_ino= " Arduino Code Preview ";
Blockly.Msg.btn_preview_py= " Python Code Preview ";
Blockly.Msg.btn_save_ino= " Save as .INO ";
Blockly.Msg.btn_save_py= " Save as .PY ";
Blockly.Msg.btn_copy=" Copy to clipboard ";
Blockly.Msg.btn_undo= " Cancel (ctrl + z) ";
Blockly.Msg.btn_redo= " Restore ";
Blockly.Msg.btn_search= " Search ";
Blockly.Msg.btn_html= " BLOCKLY-WEB ";
Blockly.Msg.btn_add= " Add to workspace ";
Blockly.Msg.btn_tint= " COLOURS ";
Blockly.Msg.btn_games= " BLOCKLY-GAMES ";
Blockly.Msg.btn_midi= " Hairless MIDI to Serial Bridge ";
Blockly.Msg.span_verify_update= " Check now ";
Blockly.Msg.survol_check = " CHECK ";
Blockly.Msg.survol_flash = " UPLOAD ";
Blockly.Msg.survol_bin = " EXPORT binaries "; 
Blockly.Msg.com1 = "Port";
// preferences
Blockly.Msg.span_theme= " Theme ";
Blockly.Msg.span_fontsize= " Font size ";
Blockly.Msg.span_renderer= " Renderer ";
Blockly.Msg.span_library= " Library ";
Blockly.Msg.span_languageMenu= " Language ";
Blockly.Msg.span_toolbox_all= " ALL ";
Blockly.Msg.labelToolboxDefinition= " Level  ";
Blockly.Msg.span_select_all= " Check all categories ";
Blockly.Msg.view = " Preview";
Blockly.Msg.library_add = " Add";
Blockly.Msg.btn_valid= " Validate ";
Blockly.Msg.span_local_online_factory=" Add other blocks ";
Blockly.Msg.span_make_it=" Make it with Blockly-Factory";
// card
Blockly.Msg.cardLabel= " Availables boards ";
Blockly.Msg.span_card_connect= "Connector : ";
Blockly.Msg.span_card_cpu= "CPU : ";
Blockly.Msg.span_card_voltage= "Supply voltage : ";
Blockly.Msg.span_card_inout= "Digital In/Out : ";
Blockly.Msg.span_card_flash= "Flash memory : ";
Blockly.Msg.span_card_in_anal= "Analog input : ";
Blockly.Msg.span_card_ram= "RAM : ";
Blockly.Msg.span_card_out_anal= "Analog output : ";
Blockly.Msg.span_card_eeprom= "EEPROM : ";
Blockly.Msg.card_connect= "";
Blockly.Msg.card_cpu= "";
Blockly.Msg.card_voltage= "";
Blockly.Msg.card_inout= "";
Blockly.Msg.card_in_anal= "";
Blockly.Msg.card_out_anal= "";
Blockly.Msg.card_eeprom= "";
// usb port
Blockly.Msg.usb = "No port available !";
// about
Blockly.Msg.aboutModalLabel= "about";
Blockly.Msg.aboutBody= "This is a mini development environment for free and open source graphical language; programs are created by assembling blocks; they are then compiled and sent to the board.";
Blockly.Msg.span_update= " Check for startup updates ";
Blockly.Msg.span_blocklino= " BLOCKLINO ";
Blockly.Msg.span_site= " The site ";
Blockly.Msg.span_forum= " The Forum ";
Blockly.Msg.span_contact= " a problem ";
// variable
Blockly.Msg.variablebody= "Name for the variable ";
Blockly.Msg.variableModalLabel= " Variable ";
Blockly.Msg.btn_variable= " OK ";